
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "mlr3fselect"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('mlr3fselect')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("AutoFSelector")
> ### * AutoFSelector
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AutoFSelector
> ### Title: AutoFSelector
> ### Aliases: AutoFSelector
> 
> ### ** Examples
> 
> library(mlr3)
> 
> task = tsk("iris")
> learner = lrn("classif.rpart")
> resampling = rsmp("holdout")
> measure = msr("classif.ce")
> 
> terminator = trm("evals", n_evals = 3)
> fselector = fs("exhaustive_search")
> afs = AutoFSelector$new(learner, resampling, measure, terminator, fselector,
+   store_fselect_instance = TRUE)
> 
> afs$train(task)
INFO  [14:37:31.054] Starting to optimize 4 parameter(s) with '<FSelectorExhaustiveSearch>' and '<TerminatorEvals>' 
INFO  [14:37:31.098] Evaluating 4 configuration(s) 
INFO  [14:37:31.778] [mlr3]  Benchmark with 4 resampling iterations 
INFO  [14:37:31.894] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/1) 
INFO  [14:37:32.025] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/1) 
INFO  [14:37:32.152] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/1) 
INFO  [14:37:32.274] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/1) 
INFO  [14:37:32.403] [mlr3]  Finished benchmark 
INFO  [14:37:32.627] Result of batch 1: 
INFO  [14:37:32.633]  Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce 
INFO  [14:37:32.633]          TRUE       FALSE        FALSE       FALSE       0.08 
INFO  [14:37:32.633]         FALSE        TRUE        FALSE       FALSE       0.04 
INFO  [14:37:32.633]         FALSE       FALSE         TRUE       FALSE       0.30 
INFO  [14:37:32.633]         FALSE       FALSE        FALSE        TRUE       0.44 
INFO  [14:37:32.633]                                 uhash 
INFO  [14:37:32.633]  e5546867-63a2-4cc2-bec7-0c0c60235701 
INFO  [14:37:32.633]  81e10ef2-cb70-4bb6-82d9-b301a5c23de8 
INFO  [14:37:32.633]  0e9b8720-c549-49cc-abe1-4c53d2754253 
INFO  [14:37:32.633]  a7a1d537-1b40-4238-acb6-3d805a601a2c 
INFO  [14:37:32.642] Finished optimizing after 4 evaluation(s) 
INFO  [14:37:32.643] Result: 
INFO  [14:37:32.646]  Petal.Length Petal.Width Sepal.Length Sepal.Width    features  x_domain 
INFO  [14:37:32.646]         FALSE        TRUE        FALSE       FALSE Petal.Width <list[4]> 
INFO  [14:37:32.646]  classif.ce 
INFO  [14:37:32.646]        0.04 
> afs$model
$learner
<LearnerClassifRpart:classif.rpart>
* Model: rpart
* Parameters: xval=0
* Packages: rpart
* Predict Type: response
* Feature types: logical, integer, numeric, factor, ordered
* Properties: importance, missings, multiclass, selected_features,
  twoclass, weights

$features
[1] "Petal.Width"

$fselect_instance
<FSelectInstanceSingleCrit>
* State:  Optimized
* Objective: <ObjectiveFSelect:classif.rpart_on_iris>
* Search Space:
<ParamSet>
             id    class lower upper      levels        default value
1: Petal.Length ParamLgl    NA    NA  TRUE,FALSE <NoDefault[3]>      
2:  Petal.Width ParamLgl    NA    NA  TRUE,FALSE <NoDefault[3]>      
3: Sepal.Length ParamLgl    NA    NA  TRUE,FALSE <NoDefault[3]>      
4:  Sepal.Width ParamLgl    NA    NA  TRUE,FALSE <NoDefault[3]>      
* Terminator: <TerminatorEvals>
* Terminated: TRUE
* Result:
   Petal.Length Petal.Width Sepal.Length Sepal.Width    features  x_domain
1:        FALSE        TRUE        FALSE       FALSE Petal.Width <list[4]>
   classif.ce
1:       0.04
* Archive:
<ArchiveFSelect>
   Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce
1:         TRUE       FALSE        FALSE       FALSE       0.08
2:        FALSE        TRUE        FALSE       FALSE       0.04
3:        FALSE       FALSE         TRUE       FALSE       0.30
4:        FALSE       FALSE        FALSE        TRUE       0.44
                                  uhash  x_domain           timestamp batch_nr
1: e5546867-63a2-4cc2-bec7-0c0c60235701 <list[4]> 2021-01-23 14:37:32        1
2: 81e10ef2-cb70-4bb6-82d9-b301a5c23de8 <list[4]> 2021-01-23 14:37:32        1
3: 0e9b8720-c549-49cc-abe1-4c53d2754253 <list[4]> 2021-01-23 14:37:32        1
4: a7a1d537-1b40-4238-acb6-3d805a601a2c <list[4]> 2021-01-23 14:37:32        1

> afs$learner
<LearnerClassifRpart:classif.rpart>
* Model: rpart
* Parameters: xval=0
* Packages: rpart
* Predict Type: response
* Feature types: logical, integer, numeric, factor, ordered
* Properties: importance, missings, multiclass, selected_features,
  twoclass, weights
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectInstanceMultiCrit")
> ### * FSelectInstanceMultiCrit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectInstanceMultiCrit
> ### Title: Multi Criterion Feature Selection Instance
> ### Aliases: FSelectInstanceMultiCrit
> 
> ### ** Examples
> 
> library(mlr3)
> library(data.table)
> 
> # Objects required to define the performance evaluator
> task = tsk("iris")
> measures = msrs(c("classif.ce", "classif.acc"))
> learner = lrn("classif.rpart")
> resampling = rsmp("cv")
> terminator = trm("evals", n_evals = 8)
> 
> inst = FSelectInstanceMultiCrit$new(
+   task = task,
+   learner = learner,
+   resampling = resampling,
+   measures = measures,
+   terminator = terminator
+ )
> 
> # Try some feature subsets
> xdt = data.table(
+   Petal.Length = c(TRUE, FALSE),
+   Petal.Width = c(FALSE, TRUE),
+   Sepal.Length = c(TRUE, FALSE),
+   Sepal.Width = c(FALSE, TRUE)
+ )
> 
> inst$eval_batch(xdt)
INFO  [14:37:32.792] Evaluating 2 configuration(s) 
INFO  [14:37:33.033] [mlr3]  Benchmark with 20 resampling iterations 
INFO  [14:37:33.041] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 5/10) 
INFO  [14:37:33.179] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 7/10) 
INFO  [14:37:33.349] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 10/10) 
INFO  [14:37:33.475] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 2/10) 
INFO  [14:37:33.607] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 4/10) 
INFO  [14:37:33.727] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 6/10) 
INFO  [14:37:33.839] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 7/10) 
INFO  [14:37:34.015] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 6/10) 
INFO  [14:37:34.136] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 4/10) 
INFO  [14:37:34.264] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 2/10) 
INFO  [14:37:34.404] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/10) 
INFO  [14:37:34.527] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 3/10) 
INFO  [14:37:34.657] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 8/10) 
INFO  [14:37:34.785] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 10/10) 
INFO  [14:37:34.921] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 3/10) 
INFO  [14:37:35.057] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 9/10) 
INFO  [14:37:35.179] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 5/10) 
INFO  [14:37:35.306] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 9/10) 
INFO  [14:37:35.437] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 8/10) 
INFO  [14:37:35.561] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/10) 
INFO  [14:37:35.700] [mlr3]  Finished benchmark 
INFO  [14:37:35.981] Result of batch 1: 
INFO  [14:37:35.983]  Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce classif.acc 
INFO  [14:37:35.983]          TRUE       FALSE         TRUE       FALSE       0.06        0.94 
INFO  [14:37:35.983]         FALSE        TRUE        FALSE        TRUE       0.04        0.96 
INFO  [14:37:35.983]                                 uhash 
INFO  [14:37:35.983]  395a735e-fbdb-47b7-b2da-01dfa84d92f5 
INFO  [14:37:35.983]  acdfeaa1-094e-4ac5-a8cc-5e591edd3c82 
> 
> # Get archive data
> inst$archive$data()
   Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce classif.acc
1:         TRUE       FALSE         TRUE       FALSE       0.06        0.94
2:        FALSE        TRUE        FALSE        TRUE       0.04        0.96
                                  uhash  x_domain           timestamp batch_nr
1: 395a735e-fbdb-47b7-b2da-01dfa84d92f5 <list[4]> 2021-01-23 14:37:35        1
2: acdfeaa1-094e-4ac5-a8cc-5e591edd3c82 <list[4]> 2021-01-23 14:37:35        1
> 
> 
> 
> cleanEx()

detaching ‘package:data.table’, ‘package:mlr3’

> nameEx("FSelectInstanceSingleCrit")
> ### * FSelectInstanceSingleCrit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectInstanceSingleCrit
> ### Title: Single Criterion Feature Selection Instance
> ### Aliases: FSelectInstanceSingleCrit
> 
> ### ** Examples
> 
> library(mlr3)
> library(data.table)
> 
> # Objects required to define the objective function
> task = tsk("iris")
> measure = msr("classif.ce")
> learner = lrn("classif.rpart")
> resampling = rsmp("cv")
> 
> # Create instance
> terminator = trm("evals", n_evals = 8)
> inst = FSelectInstanceSingleCrit$new(
+   task = task,
+   learner = learner,
+   resampling = resampling,
+   measure = measure,
+   terminator = terminator
+ )
> 
> # Try some feature subsets
> xdt = data.table(
+   Petal.Length = c(TRUE, FALSE),
+   Petal.Width = c(FALSE, TRUE),
+   Sepal.Length = c(TRUE, FALSE),
+   Sepal.Width = c(FALSE, TRUE)
+ )
> 
> inst$eval_batch(xdt)
INFO  [14:37:36.087] Evaluating 2 configuration(s) 
INFO  [14:37:36.346] [mlr3]  Benchmark with 20 resampling iterations 
INFO  [14:37:36.354] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 5/10) 
INFO  [14:37:36.482] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 7/10) 
INFO  [14:37:36.602] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 10/10) 
INFO  [14:37:36.735] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 2/10) 
INFO  [14:37:36.909] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 4/10) 
INFO  [14:37:37.045] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 6/10) 
INFO  [14:37:37.183] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 7/10) 
INFO  [14:37:37.311] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 6/10) 
INFO  [14:37:37.451] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 4/10) 
INFO  [14:37:37.611] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 2/10) 
INFO  [14:37:37.733] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/10) 
INFO  [14:37:37.858] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 3/10) 
INFO  [14:37:38.026] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 8/10) 
INFO  [14:37:38.179] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 10/10) 
INFO  [14:37:38.354] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 3/10) 
INFO  [14:37:38.503] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 9/10) 
INFO  [14:37:38.649] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 5/10) 
INFO  [14:37:38.768] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 9/10) 
INFO  [14:37:38.904] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 8/10) 
INFO  [14:37:39.024] [mlr3]  Applying learner 'select.classif.rpart' on task 'iris' (iter 1/10) 
INFO  [14:37:39.179] [mlr3]  Finished benchmark 
INFO  [14:37:39.330] Result of batch 1: 
INFO  [14:37:39.333]  Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce 
INFO  [14:37:39.333]          TRUE       FALSE         TRUE       FALSE       0.06 
INFO  [14:37:39.333]         FALSE        TRUE        FALSE        TRUE       0.04 
INFO  [14:37:39.333]                                 uhash 
INFO  [14:37:39.333]  a77e6c6c-f222-4317-bd54-31d71467fa4f 
INFO  [14:37:39.333]  bb6f7f82-fbdb-40d6-8011-01aaf70e03c0 
> 
> # Get archive data
> inst$archive$data()
   Petal.Length Petal.Width Sepal.Length Sepal.Width classif.ce
1:         TRUE       FALSE         TRUE       FALSE       0.06
2:        FALSE        TRUE        FALSE        TRUE       0.04
                                  uhash  x_domain           timestamp batch_nr
1: a77e6c6c-f222-4317-bd54-31d71467fa4f <list[4]> 2021-01-23 14:37:39        1
2: bb6f7f82-fbdb-40d6-8011-01aaf70e03c0 <list[4]> 2021-01-23 14:37:39        1
> 
> 
> 
> cleanEx()

detaching ‘package:data.table’, ‘package:mlr3’

> nameEx("FSelector")
> ### * FSelector
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelector
> ### Title: FSelector
> ### Aliases: FSelector
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 3)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> # swap this line to use a different FSelector
> fselector = fs("random_search")
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectorDesignPoints")
> ### * FSelectorDesignPoints
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorDesignPoints
> ### Title: Feature Selection via Design Points
> ### Aliases: FSelectorDesignPoints
> 
> ### ** Examples
> 
> library(mlr3)
> library(data.table)
> 
> terminator = trm("evals", n_evals = 10)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> design = data.table(Petal.Length = c(TRUE, FALSE),
+   Petal.Width = c(TRUE, FALSE),
+   Sepal.Length = c(FALSE, TRUE),
+   Sepal.Width = c(FALSE, TRUE))
> 
> fselector = fs("design_points", design = design)
> 
> 
> 
> cleanEx()

detaching ‘package:data.table’, ‘package:mlr3’

> nameEx("FSelectorExhaustiveSearch")
> ### * FSelectorExhaustiveSearch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorExhaustiveSearch
> ### Title: Feature Selection via Exhaustive Search
> ### Aliases: FSelectorExhaustiveSearch
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 5)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> fselector = fs("exhaustive_search")
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectorGeneticSearch")
> ### * FSelectorGeneticSearch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorGeneticSearch
> ### Title: Feature Selection via Genetic Search
> ### Aliases: FSelectorGeneticSearch
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 5)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> fselector = fs("genetic_search", popSize = 10L)
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectorRFE")
> ### * FSelectorRFE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorRFE
> ### Title: Feature Selection via Recursive Feature Elimination
> ### Aliases: FSelectorRFE
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 10)
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator,
+   store_models = TRUE
+ )
> 
> fselector = fs("rfe")
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectorRandomSearch")
> ### * FSelectorRandomSearch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorRandomSearch
> ### Title: Feature Selection via Random Search
> ### Aliases: FSelectorRandomSearch
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 5)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> fselector = fs("random_search")
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("FSelectorSequential")
> ### * FSelectorSequential
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FSelectorSequential
> ### Title: Feature Selection via Sequential Selection
> ### Aliases: FSelectorSequential
> 
> ### ** Examples
> 
> library(mlr3)
> 
> terminator = trm("evals", n_evals = 5)
> 
> instance = FSelectInstanceSingleCrit$new(
+   task = tsk("iris"),
+   learner = lrn("classif.rpart"),
+   resampling = rsmp("holdout"),
+   measure = msr("classif.ce"),
+   terminator = terminator
+ )
> 
> fselector = fs("sequential")
> 
> 
> 
> cleanEx()

detaching ‘package:mlr3’

> nameEx("fs")
> ### * fs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fs
> ### Title: Syntactic Sugar for FSelect Construction
> ### Aliases: fs
> 
> ### ** Examples
> 
> fs("sequential", max_features = 4)
<FSelectorSequential>
* Parameters: strategy=sfs, max_features=4
* Parameter classes: ParamLgl
* Properties: single-crit
* Packages: -
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  9.958 0.112 10.082 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
